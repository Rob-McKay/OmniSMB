/* -*-c-*- */

/*
 * These routines get used by the cmhg generated header.
 */

#include <stdbool.h>

#ifndef __OMNISMB_H
#define __OMNISMB_H

#define TICKER_RATE		6000		/* Every 60 seconds */
#define	SERVER_TIMEOUT_ILL	12000		/* After 2 mins remove from the display */
#define SERVER_TIMEOUT_DEAD	60000		/* After 10 mins forget about it */

enum { CLAIM_EVENT, DONT_CLAIM_EVENT };

/* Enum for error reporting */
typedef enum
{
    err_NOT_SUPPORTED = 0x80d120,  // TODO: Use a proper error block
    err_BAD_MAGIC,
    err_NO_MEMORY,
    err_CANT_SET_SOCKET,
    err_BAD_IOCTL,
    err_CANT_SEND,
    err_CANT_RECV,
    err_CANT_PRINT,
    err_JOB_NOT_FINISHED,
    err_CANT_READHOST,

    err_UNKNOWN
} err_number_type;

extern int server_list_insert(unsigned long addr);
extern int server_list_purge(void);
extern void *Resources(void); /* From ResGen */

extern void *modules_private_word;

typedef struct osmb_active_server {
    unsigned int magic;
    struct osmb_active_server *next;
    char *server_name;		/* Full name of server */
    int short_name_len;		/* How much of the long name to use as a short name */
    unsigned long addr;
    unsigned int last_seen;
    bool good_address;           /* True if the name was from the DNS */
    bool server_ill;
} osmb_active_server;

#define OSMB_SERVER_MAGIC	0x544553

typedef struct osmb_active_mount {
    unsigned int magic;
    struct osmb_active_mount *next;
    osmb_active_server *server_id;
    char *mount_name;
} osmb_active_mount;

#define OSMB_MOUNT_MAGIC	0xF00DC0DE

#endif /* __OMNISMB_H */
